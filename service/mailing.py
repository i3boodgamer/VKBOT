import logging
import asyncio
import sys
import os

from vkbottle import Bot, API, Keyboard, Text, KeyboardButtonColor, PhotoMessageUploader

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from core.config import settings



logging.getLogger("vkbottle").setLevel(logging.INFO)


def create_booking_keyboard():
    keyboard = Keyboard(inline=True)
    keyboard.add(Text("–•–æ—á—É –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å", payload={"type": "reserve"}), color=KeyboardButtonColor.POSITIVE)  # green button
    return keyboard.get_json()


async def get_all_members(group_id):
    members = []
    offset = 0
    count = 1000  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –∑–∞–ø—Ä–æ—Å
    
    while True:
        response = await api.groups.get_members(group_id=group_id, offset=offset, count=count)
        members.extend(response.items) 
        
        if offset + count >= response.count:
            break
        
        offset += count  

    return members


async def send_broadcast(message):
    users = await get_all_members(settings.bot.ID_GROUP)
    CHUNK_SIZE = 100
    for i in range(0, len(users), CHUNK_SIZE):
        chunk = users[i:i + CHUNK_SIZE]
        for id_user in chunk:
            try:
                photo = await photo_uploader.upload(file_source="photo.png", peer_id=0)
                await bot.api.messages.send(
                    user_id=id_user,
                    message=message,
                    keyboard=create_booking_keyboard(),
                    attachment=photo,
                    random_id=0
                )
                print(f"–°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º: {id_user}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º {id_user}: {e}")
            await asyncio.sleep(0.1)


api = API(settings.bot.TOKEN)
bot = Bot(api=api)
photo_uploader = PhotoMessageUploader(bot.api)


if __name__ == "__main__":
    message = "üî• –°—É–ø–µ—Ä —Å–∫–∏–¥–∫–∞ –Ω–∞ –æ–±—â–∏–π –∑–∞–ª!\n\n" \
            "–ú—ã –¥–∞—Ä–∏–º —Å–∫–∏–¥–∫—É 50% –Ω–∞ –≤–µ—Å—å –ø—Ä–∞–π—Å –æ–±—â–µ–≥–æ –∑–∞–ª–∞ –≤ –Ω–∞—à–µ–º –∫–ª—É–±–µ –Ω–∞ —É–ª. –°–µ—á–µ–Ω–æ–≤–∞, 10–ê üéÅ\n\n" \
            "–£—Å–ø–µ–π –∑–∞–±—Ä–∞—Ç—å –≤—ã–≥–æ–¥—É –¥–æ 21 –¥–µ–∫–∞–±—Ä—è –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ (–ø—è—Ç–Ω–∏—Ü–∞). –ñ–¥—ë–º —Ç–µ–±—è –≤ –∫–ª—É–±–µ!"
    asyncio.run(send_broadcast(message=message))
